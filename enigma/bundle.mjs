import t from"events";class e{#t=new t;on=this.#t.on.bind(this);off=this.#t.off.bind(this);once=this.#t.once.bind(this);emit=this.#t.emit.bind(this)}class i extends e{}class r extends i{}const s="A".charCodeAt(0);function n(t,e=0){return t.charCodeAt(e)-s}function o(t){return String.fromCharCode(t+s)}function h(t,e){return o(c(n(t)+e))}function g(t){return h(t,1)}function a(t){return h(t,8)}function c(t,e=26){return(e+t)%e}const l=/^[A-Z]$/;function u(t){return l.test(t)}function d(t){const e=`${t}`.toUpperCase();if(u(e))return e.charAt(0);throw"Input cannot be normalized"}var p=Object.freeze({__proto__:null,getIndex:n,getLetter:o,getModularNumber:c,getNextLetter:g,getNotchLetter:a,getShiftedLetter:h,isUpperCaseLetter:u,normalizeInput:d});class f extends r{pinToPin(t){return n(this.wirings,t)}getReflectedLetter(t){const e=n(t.toUpperCase());return o(this.pinToPin(e))}}class R extends f{}class w extends R{wirings="ENKQAUYWJICOPBLMDXZVFTHRGS"}class P extends R{wirings="RDOBJNTKVEHMLFCWZAXGYIPSUQ"}class L extends f{wirings="EJMZALYXVBWFCRQUONTSPIKHGD"}class W extends f{wirings="YRUHQSLDPXNGOKMIEBFZCWVJAT"}class I extends f{wirings="LEYJVCNIXWPBQMDRTAKZGFUHOS"}class O extends f{wirings="FVPJIAOYEDRZXWGCTKUQSBNMHL"}class m extends f{#e=[[0,13]];plugWire(t,e){if(this.#e.length>=13)throw"All plugs have been wired";if(!this.arePlugsWireable(t,e))throw"This couple is permanently wired and therefore cannot be plugged";if(t===e)throw"Cannot wire the same letter";if(!(t>=0&&t<26&&e>=0&&e<26))throw"Wiring indexes out of bounds";for(let i=0;i<this.#e.length;i+=1){const[r,s]=this.#e[i];if(r===t||s===t||r===e||s===e)throw"At least one of the plugs is already wired"}this.#e.push([t,e]),this.emit("change.wirePlugged",t,e)}arePlugsWireable(t,e){return!(0===t&&13===e||13===t&&0===e)}unplugWire(t,e){if(!this.arePlugsWireable(t,e))throw"This couple is permanently wired and therefore cannot be unplugged";for(let i=0;i<this.#e.length;i+=1){const[r,s]=this.#e[i];(r===t&&s===e||r===e&&s===t)&&(this.#e.splice(i,1),this.emit("change.wireUnplugged",t,e))}}pinToPin(t){for(let e=0;e<this.#e.length;e+=1){const[i,r]=this.#e[e];if(i===t)return r;if(r===t)return i}throw"This pin is not wired"}getReflectedLetter(){throw"This method has various interpretations on this reflector"}getIndexFromGermanNotation(t){let e=n(t);if(9===e||24===e)throw"J and Y letters do not appear in German notation";return(e>8&&e<13||25===e)&&(e-=1),25-e}getIndexFromAlliedNotation(t){return c(n(t)+25)}plugWireInGermanNotation(t,e){this.plugWire(this.getIndexFromGermanNotation(t),this.getIndexFromGermanNotation(e))}unplugWireInGermanNotation(t,e){this.unplugWire(this.getIndexFromGermanNotation(t),this.getIndexFromGermanNotation(e))}plugWireInAlliedNotation(t,e){this.plugWire(this.getIndexFromAlliedNotation(t),this.getIndexFromAlliedNotation(e))}unplugWireInAlliedNotation(t,e){this.unplugWire(this.getIndexFromAlliedNotation(t),this.getIndexFromAlliedNotation(e))}}class x extends f{wirings="FSOKANUERHMBTIYCWLQPZXVGJD"}class T extends r{constructor(){super(),this.setRingPosition(0)}pinToPlate(t){return n(this.wirings,t)}plateToPin(t){return this.wirings.indexOf(o(t))}setRingPosition(t){this.ringPosition=t,this.emit("change.ringPositionSet",t)}setRingSetting(t){this.setRingPosition(n(t)),this.emit("change.ringSettingSet",t)}getOutputLetter(t){const e=c(n(t.toUpperCase())-this.ringPosition);return o(c(this.pinToPlate(e)+this.ringPosition))}getInputLetter(t){const e=c(n(t.toUpperCase())+this.ringPosition);return o(c(this.plateToPin(e)-this.ringPosition))}}class F extends T{}class C extends F{wirings="LEYJVCNIXWPBQMDRTAKZGFUHOS"}class N extends F{wirings="FSOKANUERHMBTIYCWLQPZXVGJD"}class A extends T{wirings="EKMFLGDQVZNTOWYHXUSPAIBRCJ";notchPosition="Y"}class S extends T{wirings="AJDKSIRUXBLHWTMCQGZNPYFVOE";notchPosition="M"}class U extends T{wirings="BDFHJLCPRTXVZNYEIWGAKMUSQO";notchPosition="D"}class B extends T{wirings="ESOVPZJAYQUIRHXLNFTGKDCMWB";notchPosition="R"}class D extends T{wirings="VZBRGITYUPSDNHLXAWMJQOFECK";notchPosition="H"}class E extends T{wirings="JPGVOUMFYQBENHZRDKASXLICTW";notchPosition="HU"}class G extends T{wirings="NZJHGRCXMYSWBOUFAIVLPEKQDT";notchPosition="HU"}class M extends T{wirings="FKQHTLXOCBJSPDZRAMEWNIUYGV";notchPosition="HU"}class H extends i{constructor(t,e){if(super(),this.firstLetter=d(t),this.secondLetter=d(e),this.firstLetter===this.secondLetter)throw new Error("Plugging the same letter")}}class v extends H{swap(t){return t===this.firstLetter?this.secondLetter:t===this.secondLetter?this.firstLetter:void 0}swapForward=this.swap.bind(this);swapBackward=this.swap.bind(this)}class V extends i{static DIRECTION_FORWARD="F";static DIRECTION_BACKWARDS="B";#i=[];plugWire(t,e){if(t instanceof H&&null==e){for(let e=0;e<this.#i.length;e+=1){const{firstLetter:i,secondLetter:r}=this.#i[e];if(i===t.firstLetter||r===t.secondLetter||r===t.firstLetter||i===t.secondLetter)return!1}return this.#i.push(t),this.emit("change.wirePlugged",t.firstLetter,t.secondLetter),!0}return"string"==typeof t&&"string"==typeof e&&this.plugWire(new v(t,e))}unplugWire(t,e){if(t instanceof H&&null==e)for(let e=0;e<this.#i.length;e+=1){const{firstLetter:i,secondLetter:r}=this.#i[e];if(i===t.firstLetter&&r===t.secondLetter||r===t.firstLetter&&i===t.secondLetter)return this.#i.splice(e,1),this.emit("change.wireUnplugged",t.firstLetter,t.secondLetter),!0}else if("string"==typeof t&&"string"==typeof e)return this.unplugWire(new v(t,e));return!1}plugWires(t){t.forEach((t=>{t instanceof Array?this.plugWire(t[0],t[1]):t instanceof H&&this.plugWire(t)}))}unplugAllWires(){this.#i.splice(0,this.#i.length)}getSwappedLetter(t,e){t=d(t);for(let i=0;i<this.#i.length;i+=1){const r="F"===e?this.#i[i].swapForward(t):this.#i[i].swapBackward(t);if(null!=r)return r}return t}}const b=[6,31,4,29,18,39,16,25,30,23,28,1,38,11,36,37,26,27,24,21,14,3,12,17,2,7,0,33,10,35,8,5,22,19,20,13,34,15,32,9],K=[6,0,7,5,1,8,4,2,9,3];class Y extends i{#r={};#s=0;setUhrSetting(t){this.#s=c(t,b.length),this.emit("change.uhrSetting",this.#s)}getUhrSetting(){return this.#s}getInnerPin(t){return c(b[c(t+this.#s,b.length)]-this.#s,b.length)}getOuterPin(t){const e=c(t+this.#s,b.length);return c(b.indexOf(e)-this.#s,b.length)}getIngoingBlackWire(t){const e=4*(t-1),i=this.getInnerPin(e);return K[(i-2)/4]+1}getOutgoingBlackWire(t){const e=4*(t-1)+2,i=this.getInnerPin(e);return K[i/4]+1}getIngoingRedWire(t){const e=4*K.indexOf(t-1);return(this.getOuterPin(e)-2)/4+1}getOutgoingRedWire(t){const e=4*K.indexOf(t-1)+2;return this.getOuterPin(e)/4+1}getUhrWire(t){return this.#r[t]}getUhrWires(){return Object.keys(this.#r).sort(((t,e)=>Number(e)-Number(t))).map((t=>this.#r[t]))}prepareUhrWire(t,e,i){const r=this,s=new class extends H{swapForward(e){return e===this.firstLetter?r.#r[r.getIngoingBlackWire(t)].secondLetter:e===this.secondLetter?r.#r[r.getIngoingRedWire(t)].firstLetter:void 0}swapBackward(e){return e===this.firstLetter?r.#r[r.getOutgoingBlackWire(t)].secondLetter:e===this.secondLetter?r.#r[r.getOutgoingRedWire(t)].firstLetter:void 0}}(e,i);return this.#r[t]=s,s}prepareUhrWires(t){t.forEach((([t,e],i)=>{this.prepareUhrWire(i+1,t,e)}))}}class J extends r{getPlateFromLetter(t){return n(t)}getLetterFromPlate(t){return o(t)}}const Z="L",Q="C",X="R";class k extends e{plugBoard=new V;entryWheel=new J;rotors={};rotorsWindowLetter={};constructor(){super(),this.setRotor(null,Z),this.setRotor(null,Q),this.setRotor(null,X)}getPlugBoard(){return this.plugBoard}setRotor(t,e){return this.rotors[e]=t,this.emit("change.rotorSet",t,e),this.setRotorWindowLetter("A",e),this}getRotor(t){return this.rotors[t]}setReflector(t){return this.reflector=t,this.emit("change.reflectorSet",t),this}setRotorWindowLetter(t,e){return this.rotorsWindowLetter[e]=t,this.emit("change.rotorWindowLetterSet",t,e,this.getRotor(e)),this}getRotorWindowLetter(t){return this.rotorsWindowLetter[t]}isRotorInNotchPosition(t){const e=a(this.getRotorWindowLetter(t));return this.getRotor(t).notchPosition.indexOf(e)>-1}advanceRotor(t){return this.setRotorWindowLetter(g(this.getRotorWindowLetter(t)),t),this.emit("change.rotorAdvanced",t,this.getRotor(t),this.getRotorWindowLetter(t)),this}advanceRotors(){const t=this.isRotorInNotchPosition(Q),e=this.isRotorInNotchPosition(X);return t&&this.advanceRotor(Z),(t||e)&&this.advanceRotor(Q),this.advanceRotor(X),this.emit("change.rotorsAdvanced"),this}encodeForward(t){const e=t.toUpperCase(),i=this.plugBoard.getSwappedLetter(e,V.DIRECTION_FORWARD),r=this.entryWheel.getPlateFromLetter(i),s=this.getRotorInputPosition(r,X),n=this.getRotor(X).pinToPlate(s),o=this.getRotorOutputPosition(n,X),h=this.getRotorInputPosition(o,Q),g=this.getRotor(Q).pinToPlate(h),a=this.getRotorOutputPosition(g,Q),c=this.getRotorInputPosition(a,Z),l=this.getRotor(Z).pinToPlate(c);return this.getRotorOutputPosition(l,Z)}encodeReflect(t){return this.reflector.pinToPin(t)}encodeBackwards(t){const e=this.getRotorInputPosition(t,Z),i=this.getRotor(Z).plateToPin(e),r=this.getRotorOutputPosition(i,Z),s=this.getRotorInputPosition(r,Q),n=this.getRotor(Q).plateToPin(s),o=this.getRotorOutputPosition(n,Q),h=this.getRotorInputPosition(o,X),g=this.getRotor(X).plateToPin(h),a=this.getRotorOutputPosition(g,X),c=this.entryWheel.getLetterFromPlate(a);return this.plugBoard.getSwappedLetter(c,V.DIRECTION_BACKWARDS)}getEncodedLetter(t){if(!this.isMachineValidState())throw"Machine is not in valid state";this.advanceRotors();const e=this.encodeForward(t),i=this.encodeReflect(e);return this.encodeBackwards(i)}getRotorInputPosition(t,e){return c(t+n(this.getRotorWindowLetter(e))-this.getRotor(e).ringPosition)}getRotorOutputPosition(t,e){return c(t-n(this.getRotorWindowLetter(e))+this.getRotor(e).ringPosition)}encode(t){let e="";for(let i=0;i<t.length;i+=1)e+=this.getEncodedLetter(t.charAt(i));return e}isMachineValidState(){return this.getRotor(Z)instanceof T&&this.getRotor(Q)instanceof T&&this.getRotor(X)instanceof T&&this.reflector instanceof f}static LEFT_ROTOR=Z;static CENTER_ROTOR=Q;static RIGHT_ROTOR=X}const y="F";class _ extends k{constructor(){super(),this.setRotor(null,y)}encodeForward(t){const e=super.encodeForward(t);if(this.isClassicConfiguration())return e;{const t=this.getRotorInputPosition(e,y),i=this.getRotor(y).pinToPlate(t);return this.getRotorOutputPosition(i,y)}}encodeBackwards(t){let e;if(this.isClassicConfiguration())e=t;else{const i=this.getRotorInputPosition(t,y),r=this.getRotor(y).plateToPin(i);e=this.getRotorOutputPosition(r,y)}return super.encodeBackwards(e)}isClassicConfiguration(){return null===this.getRotor(y)&&this.reflector instanceof f&&!(this.reflector instanceof R)}isMachineValidState(){const t=super.isMachineValidState();return this.isClassicConfiguration()?t:t&&this.getRotor(y)instanceof F&&this.reflector instanceof R}static FOURTH_ROTOR=y}export{k as Enigma,_ as EnigmaM4,e as EventEmitter,V as PlugBoard,v as PlugBoardWire,L as ReflectorA,W as ReflectorB,I as ReflectorBeta,O as ReflectorC,m as ReflectorD,x as ReflectorGamma,A as RotorI,S as RotorII,U as RotorIII,B as RotorIV,D as RotorV,E as RotorVI,G as RotorVII,M as RotorVIII,w as ThinReflectorB,P as ThinReflectorC,C as ThinRotorBeta,N as ThinRotorGamma,Y as Uhr,p as Utils};
