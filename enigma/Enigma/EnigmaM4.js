Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=r(require("./Enigma")),e=r(require("../Component/WiredWheel/Rotor/ThinRotor/ThinRotor")),o=r(require("../Component/WiredWheel/Reflector/Reflector")),i=r(require("../Component/WiredWheel/Reflector/ThinReflector/ThinReflector"));function r(t){return t&&t.__esModule?t:{default:t}}const s="F";class n extends t.default{constructor(){super(),this.setRotor(null,s)}encodeForward(t){const e=super.encodeForward(t);if(this.isClassicConfiguration())return e;{const t=this.getRotorInputPosition(e,s),o=this.getRotor(s).pinToPlate(t);return this.getRotorOutputPosition(o,s)}}encodeBackwards(t){let e;if(this.isClassicConfiguration())e=t;else{const o=this.getRotorInputPosition(t,s),i=this.getRotor(s).plateToPin(o);e=this.getRotorOutputPosition(i,s)}return super.encodeBackwards(e)}isClassicConfiguration(){return null===this.getRotor(s)&&this.reflector instanceof o.default&&!(this.reflector instanceof i.default)}isMachineValidState(){const t=super.isMachineValidState();return this.isClassicConfiguration()?t:t&&this.getRotor(s)instanceof e.default&&this.reflector instanceof i.default}static FOURTH_ROTOR=s}exports.default=n;
