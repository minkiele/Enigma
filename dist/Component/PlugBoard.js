var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd&&define(["require","exports","../Component","../Utils"],e)}((function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=__importDefault(e("../Component")),r=e("../Utils");class n extends i.default{constructor(){super(...arguments),this.wirings=[]}plugWire(e,t){if((e=r.normalizeInput(e))===(t=r.normalizeInput(t)))throw"Cannot plug the same letter";for(let i=0;i<this.wirings.length;i+=1){const[r,n]=this.wirings[i];if(r===e||n===t||n===e||r===t)return!1}const i=[e,t];return this.wirings.push(i),this.emit("change.wirePlugged",e,t),!0}unplugWire(e,t){e=r.normalizeInput(e),t=r.normalizeInput(t);for(let i=0;i<this.wirings.length;i+=1){const[r,n]=this.wirings[i];if(r===e&&n===t||n===e&&r===t)return this.wirings.splice(i,1),this.emit("change.wireUnplugged",e,t),!0}return!1}plugWires(e){e.forEach((e=>{this.plugWire(e[0],e[1])}))}unplugAllWires(){this.wirings.splice(0,this.wirings.length)}getSwappedLetter(e){e=r.normalizeInput(e);for(let t=0;t<this.wirings.length;t+=1){const[i,r]=this.wirings[t];if(i===e)return r;if(r===e)return i}return e}}t.default=n}));
